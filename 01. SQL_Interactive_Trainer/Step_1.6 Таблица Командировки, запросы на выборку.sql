USE `stepik`;

/*Step_1.6.1*/
/*Создаю таблицу "Trip"*/
CREATE TABLE `trip`(
	trip_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(30),
    city VARCHAR (25),
    per_diem DECIMAL(8,2),
    date_first DATE,
    date_last DATE);
    
/*Вношу данные в таблицу "Trip"*/
INSERT INTO `trip` (name, city, per_diem, date_first, date_last)
VALUES 
	('Баранов П.Е.', 'Москва', 700, '2020-01-12', '2020-01-17'),
	('Абрамова К.А.', 'Владивосток', 450, '2020-01-14', '2020-01-27'),
	('Семенов И.В.', 'Москва', 700, '2020-01-23', '2020-01-31'),
	('Ильиных Г.Р.', 'Владивосток', 450, '2020-01-12', '2020-02-02'),
	('Колесов С.П.', 'Москва', 700, '2020-02-01', '2020-02-06'),
	('Баранов П.Е.', 'Москва', 700, '2020-02-14', '2020-02-22'),
	('Абрамова К.А.', 'Москва', 700, '2020-02-23', '2020-03-01'),
	('Лебедев Т.К.', 'Москва', 700, '2020-03-03', '2020-03-06'),
	('Колесов С.П.', 'Новосибирск', 450, '2020-02-27', '2020-03-12'),
	('Семенов И.В.', 'Санкт-Петербург', 700, '2020-03-29', '2020-04-05'),
	('Абрамова К.А.', 'Москва', 700, '2020-04-06', '2020-04-14'),
	('Баранов П.Е.', 'Новосибирск', 450, '2020-04-18', '2020-05-04'),
	('Лебедев Т.К.', 'Томск', 450, '2020-05-20', '2020-05-31'),
	('Семенов И.В.', 'Санкт-Петербург', 700, '2020-06-01', '2020-06-03'),
	('Абрамова К.А.', 'Санкт-Петербург', 700, '2020-05-28', '2020-06-04'),
	('Федорова А.Ю.', 'Новосибирск', 450, '2020-05-25', '2020-06-04'),
	('Колесов С.П.', 'Новосибирск', 450, '2020-06-03', '2020-06-12'),
	('Федорова А.Ю.', 'Томск', 450, '2020-06-20', '2020-06-26'),
	('Абрамова К.А.', 'Владивосток', 450, '2020-07-02', '2020-07-13'),
	('Баранов П.Е.', 'Воронеж', 450, '2020-07-19', '2020-07-25');
    
/*Вывожу таблицу для проверки*/
SELECT * FROM `trip`;

/*Step_1.6.2 Вывести из таблицы trip информацию о командировках тех сотрудников, фамилия которых 
заканчивается на букву «а», в отсортированном по убыванию даты последнего дня командировки виде. 
В результат включить столбцы name, city, per_diem, date_first, date_last.
Тут тупанул и стал использовать "=", вместо "LIKE", надо иногда повторять пройденный материал*/

SELECT name, city, per_diem, date_first, date_last
FROM `trip`
WHERE name LIKE '%а %'
ORDER BY date_last DESC;

/*Step_1.6.3 Вывести в алфавитном порядке фамилии и инициалы тех сотрудников, которые были в командировке в Москве.
Задание с подвохом, по сути надо вывести именно уникальных сотрудников, поэтому надо использовать DISTINCT*/

SELECT distinct(name)
FROM `trip`
WHERE city = 'Москва';

/*Step_1.6.4 Для каждого города посчитать, сколько раз сотрудники в нем были.  
Информацию вывести в отсортированном в алфавитном порядке по названию городов. 
Вычисляемый столбец назвать Количество. 
В данном задании необходимо произвести группировку по городу и подсчитать методом COUNT повторяющиеся фамилии*/

SELECT city, COUNT(name) AS Количество
FROM `trip`
GROUP BY city
ORDER BY city;

/*Step_1.6.5 Вывести два города, в которых чаще всего были в командировках сотрудники. 
Вычисляемый столбец назвать Количество. 
Выполняем сортировку по Количеству DESC и задаем ограничение в 2 позиции*/

SELECT city, COUNT(name) AS Количество
FROM `trip`
GROUP BY city
ORDER BY COUNT(name) DESC
LIMIT 2;

/*Step_1.6.6 - Вывести информацию о командировках во все города кроме Москвы и Санкт-Петербурга (фамилии и инициалы сотрудников, город ,  
длительность командировки в днях, при этом первый и последний день относится к периоду командировки). 
Последний столбец назвать Длительность. 
Информацию вывести в упорядоченном по убыванию длительности поездки, а потом по убыванию названий городов (в обратном алфавитном порядке)
.
1 - вывожу все командировки кроме МСК и Петербург
2 - улучшаю запрос, вычисляя длительность данных командировок
3 - т.к. первый и последний день относятся к длительности командировки, то необходимо сделать +1*/

SELECT name, city, DATEDIFF(date_last, date_first) + 1 AS Длительность
FROM `trip`
WHERE city <> 'Москва' AND city <> 'Санкт-Петербург'
ORDER BY DATEDIFF(date_last, date_first) + 1 DESC;

/*Step_1.6.7 - Вывести информацию о командировках сотрудника(ов), которые были самыми короткими по времени. 
В результат включить столбцы name, city, date_first, date_last.
с помощью вложенного запроса необходимо вычислить черех MIN самую короткую командировку*/

SELECT name, city, date_first, date_last
FROM `trip` 
WHERE DATEDIFF(date_last, date_first) = (SELECT
	MIN(DATEDIFF(date_last, date_first))
    FROM `trip`);
    
/*Step_1.6.8 - Вывести информацию о командировках, начало и конец которых относятся к одному месяцу (год может быть любой). 
В результат включить столбцы name, city, date_first, date_last. 
Строки отсортировать сначала  в алфавитном порядке по названию города, а затем по фамилии сотрудника .
По сути должен просто сравнить месяца даты начала и даты конца через MONTH(date)*/
SELECT name, city, date_first, date_last
FROM `trip`
WHERE MONTH(date_first) = MONTH(date_last)
ORDER BY city, name;

/*Step_1.6.9 - Вывести название месяца и количество командировок для каждого месяца. 
Считаем, что командировка относится к некоторому месяцу, если она началась в этом месяце. 
Информацию вывести сначала в отсортированном по убыванию количества, а потом в алфавитном порядке по названию месяца виде. 
Название столбцов – Месяц и Количество.
Используя MONTH(date) для даты начала командировки определяю месяц
Далее группирую по месяцам и произвожу подсчет через COUNT()*/
SELECT MONTHNAME(date_first) AS Месяц, COUNT(MONTH(date_first)) AS Количество
FROM `trip`
GROUP BY MONTHNAME(date_first)
ORDER BY COUNT(MONTHNAME(date_first)) DESC, MONTHNAME(date_first);

/*Step_1.6.10 - Вывести сумму суточных (произведение количества дней командировки и размера суточных) для командировок, первый день которых пришелся на февраль или март 2020 года. 
Значение суточных для каждой командировки занесено в столбец per_diem. 
Вывести фамилию и инициалы сотрудника, город, первый день командировки и сумму суточных. 
Последний столбец назвать Сумма. 
Информацию отсортировать сначала  в алфавитном порядке по фамилиям сотрудников, а затем по убыванию суммы суточных.
По сути объединенное задание из предыдущих
1 - Добавить столбец per_diem, его до этого не было в таблице ** я балбес, данный столбец был в таблице на Stepik
2 - Сделать запрос, который выведет командировки Февраля и марта, исходя из логики предыдущих заданий это те, что начались в эти месяцы
3 - Сделать запрос, который выведет продолжительность данных командировок
4 - сделать запрос, который подсчитает стоимость данных командировок
5 - оформить все, согласно ТЗ*/

SELECT name, city, date_first, (DATEDIFF(date_last, date_first) + 1) * per_diem AS Сумма
FROM `trip`
WHERE MONTHNAME(date_first) = 'february' OR MONTHNAME(date_first) = 'march'
ORDER BY name, Сумма DESC;




