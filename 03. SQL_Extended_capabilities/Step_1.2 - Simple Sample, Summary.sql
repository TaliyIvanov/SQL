CREATE SCHEMA `Summary`;
USE `Summary`;

CREATE TABLE resume (
    resume_id INT PRIMARY KEY AUTO_INCREMENT, 
    applicant VARCHAR(60),
    specialisation VARCHAR(80), 
    position VARCHAR(50),
    min_salary INT, 
    experience INT, 
    date_birth DATE
);
INSERT INTO resume(applicant, specialisation, position,min_salary, experience, date_birth)  VALUES
('Иванов М.С.','IT', 'web-программист', 50000, 2, '1998-12-15'),
('Петров Ф.С.', 'Строительство', 'инженер-строитель', 45000, 5, '1995-01-07'),
('Федоров П.Р.', 'Продажи', 'менеджер по продажам', 35000, 7, '1993-08-26'),
('Абрамова А.А.', 'Продажи', 'региональный менеджер', 90000, 4, '1992-09-23'),
('Самарин С.С.', 'Транспорт', 'логист-диспетчер', 30000, 0, '2001-07-18'),
('Туполев И.Д.','Строительство', 'инженер-строитель', 40000, 10, '1985-03-16'),
('Баранов П.В.','Юристы','адвокат', 60000, 5, '1982-02-24'),
('Шевцова А.Р.', 'Продажи', 'менеджер по продажам', 30000, 2, '1995-11-12'),
('Белых К.Д.','IT', 'Python программист', 100000, 5, '1991-12-09'),
('Садиев С.И.','IT', 'программист PHP и Питон', 90000, 6, '1982-11-07'),
('Астахов И.И.', 'Строительство', 'прораб', 100000, 15, '1976-01-30'),
('Борисов В.В.', 'Продажи', 'менеджер по продажам', 50000, 12, '1980-03-01'),
('Тощаков П.С.', 'Строительство', 'технолог', 50000, 15, '1979-04-25'),
('Солиева К.П.', 'Продажи', 'директор по продажам', 130000, 7, '1973-04-30'),
('Левченко А.Г.','IT', 'PHP разработчик', 110000, 9, '1967-12-27'),
('Хованец Г.П.', 'Строительство', 'прораб', 90000, 16, '1970-10-01'), 
('Тихомиров Т.М.', 'Транспорт', 'экспедитор', 45000, 20, '1975-08-08'),
('Дворников М.А.', 'Транспорт','логист-диспетчер', 35000,2, '1998-11-10'),
('Жидкова Р.Л.', 'Продажи', 'менеджер по продажам', 30000, 5, '1987-10-20'),
('Бондарев С.С.','IT', 'web-программист', 130000,9, '1987-02-16'),
('Иванов П.А.', 'Продажи', 'директор по продажам', 140000, 11, '1979-04-24'),
('Прохоров А.Д.','IT', 'web-программист', 200000, 8, '1985-03-23'),
('Соболев А.И.', 'Транспорт', 'водитель', 35000, 15, '1984-03-30'),
('Ромашко Ф.Ю.', 'Продажи','продавец-консультант', 25000, 0, '2002-05-07'),
('Краско С.С.','IT','программист 1C', 85000, 3, '1997-09-02'),
('Паршина Г.И.','IT', 'программист C и Питон', 110000, 9, '1981-08-11'),
('Светлова С.Т.', 'Транспорт', 'водитель', 40000, 10, '1991-09-17'),
('Буянов П.Д.','Юристы', 'адвокат', 55000, 15, '1980-06-01'),
('Ульянов М.А.', 'Продажи', 'региональный менеджер', 130000, 11, '1979-06-19'),
('Тупикин К.Л.','IT', 'программист 1.7C', 140000, 12, '1981-07-03'),
('Ермоленко Г.С.','IT', 'программист C#', 90000, 6, '1993-12-09'),
('Сомов Я.Г.','IT', 'программист C++', 115000, 8, '1990-11-16'),
('Орлова Е.Р.', 'Строительство', 'head', 170000, 15, '1972-01-16'),
('Ларин В.П.', 'Строительство', 'инженер-строитель', 70000, 12, '1970-05-15');

/*Общая теория к шагам: 1.2.2 - 1.2.12

Оператор REGEXP позволяет задать регулярное выражение, которому должно соответствовать значение столбца.
Синтаксиc REGEXP:
WHERE выражение [NOT] REGEXP регулярное выражение
В регулярном выражении можно использовать следующие специальные символы: 
^ - указывает на начало строки;
$ - указывает на конец строки;
[символы] -соответствует любому одиночному символу из квадратных скобок, символы записываются без пробелов и других знаков препинания;
[начальный_символ-конечный_символ] -соответствует любому одиночному символу из диапазона символов;
[^символы]  строка содержит НЕ символы, перечисленные после ^ , то есть в строке есть какие-то символы, помимо тех, что указаны после ^;
[^начальный_символ-конечный_символ] - строка содержит НЕ символы, из интервала после ^ , то есть в строке есть какие-то символы, помимо тех, что указаны после ^.
|- отделяет два шаблона строки, и значение должно соответствовать одну из этих шаблонов;
. - соответствует любому символу (не пустому) ;
символ* - определяет любое количество повторений указанного перед звездочкой символа ( в том числе символа вообще может и не быть);
символ+ - определяет одно и более количество повторений указанного перед плюсом символа;
символ? - определяет любой символ, в том числе и отсутствие символа;
\\b - специальный символ, который означает начало строки, конец строки, перенос строки, пробел, запятую, знаки операций и другие символы, которые могут стоять между отдельными словами. */

/*Step_1.2.2 - Вывести фамилию и инициалы соискателей, претендующих на должность, название которой содержит слово "менеджер". 
Для каждого соискателя указать их должность. Информацию отсортировать по фамилиям соискателей в алфавитном порядке.*/

SELECT applicant, position
FROM resume
WHERE position REGEXP 'менеджер'
ORDER BY applicant;


/*Step_1.2.3 - Вывести фамилию и инициалы соискателей, претендующих на должность, название которой заканчивается на русскую букву "р". 
Для каждого соискателя указать их должность и дату рождения. 
Информацию отсортировать сначала по должности в алфавитном порядке, затем по возрастанию даты рождения.*/

SELECT applicant, position, date_birth
FROM resume
WHERE position REGEXP 'р$'
ORDER BY position, date_birth;

/*Step_1.2.4 - Вывести фамилию и инициалы соискателей, претендующих на должность, название которой начинается либо с "а", либо "п", либо "и". 
Для каждого соискателя указать их должность и минимальную зарплату. 
Информацию отсортировать по фамилиям соискателей в алфавитном порядке.*/

SELECT applicant, position, min_salary
FROM resume
WHERE position REGEXP '^[а, п, и]'
ORDER BY applicant;

/*Step_1.2.5 - Вывести фамилию и инициалы тех соискателей, имя (первая буква инициалов)  которых начинается с букв от "А" до "К" включительно. 
Указать должность, на которую они претендуют, и минимальную заработную плату. 
Информацию отсортировать сначала по инициалам в алфавитном порядке, а затем по убыванию минимальной заработной платы.*/

SELECT applicant, position, min_salary
FROM resume
WHERE SUBSTRING_INDEX(applicant, " ", -1) REGEXP '^[А-К]'  
ORDER BY SUBSTRING_INDEX(applicant, " ", -1), min_salary DESC;

/*Step_1.2.6 - 
Вывести фамилию и инициалы тех соискателей, имя (первая буква инициалов)  которых не содержит букв "А" и "М", а отчество ( вторая буква инициалов) не содержит букв из интервала от "К" до "Ф". 
Указать должность, на которую они претендуют, и минимальную заработную плату. 
Информацию отсортировать сначала по второй букве инициалов в обратном алфавитном порядке, а затем по возрастанию минимальной заработной платы.*/
/*Чтобы понять нужно короче прям конкретно поразбираться*/

SELECT applicant, position, min_salary
FROM resume 
WHERE SUBSTRING_INDEX(applicant, " ", -1) REGEXP '^[^А,М]' AND SUBSTRING_INDEX(applicant, ".", -2) REGEXP '^[^К-Ф]'
ORDER BY SUBSTRING_INDEX(applicant, ".", -2) DESC, min_salary;

/*Step_1.2.7 - Вывести фамилию и инициалы соискателей, претендующих на должность,  название которой либо начинается с английской буквы, либо заканчивается символами "менеджер". 
Для каждого соискателя указать их должность и дату рождения. Информацию отсортировать по убыванию даты рождения.*/

SELECT applicant, position, date_birth
FROM resume
WHERE position REGEXP '^[a-z]|менеджер$'
ORDER BY date_birth DESC;

/*Step_1.2.8 - Вывести фамилию и инициалы соискателей, претендующих на должность,  
название которой состоит из 6 или 7 символов. 
Для каждого соискателя указать их должность и минимальную зарплату. 
Информацию отсортировать по убыванию минимальной заработной платы.*/

/*Простое решение, как по мне*/
SELECT applicant, position, min_salary
FROM resume
WHERE CHAR_LENGTH(position) BETWEEN 6 AND 7
ORDER BY min_salary DESC;

/*Алтернативный вариант решения*/
/*При том 6 или 7 можно записать следующим образом: '^.{6,7}$' или '^.{6}.?$', */
SELECT applicant, position, min_salary
FROM resume
WHERE position REGEXP '^.{6,7}$'
ORDER BY min_salary DESC;

/*Step_1.2.9 - Вывести фамилию и инициалы соискателей, претендующих на должность, название которой состоит из двух слов, начинается со слова "программист", 
а второе слово включает буквы "C" (русскую или английскую) перед которой могут (но не обязательно) стоять только цифры, а после только символы "+" и "#" 
в любом количестве, в том числе и эти символы могут отсутствовать. 
Вывести должность, на которую претендует соискатель. Информацию отсортировать по фамилии соискателя в алфавитном порядке.*/

SELECT applicant, position
FROM resume
WHERE position 