/*Расширенные возможности SQL*/
/*Шаг 1.1 - Склад*/

CREATE schema stock;
USE stock;
/*1.1.1 - Создание БД*/
CREATE TABLE book (
    book_id INT PRIMARY KEY AUTO_INCREMENT, 
    title VARCHAR(50), 
    author VARCHAR(30), 
    price decimal(8,2), 
    amount INT 
);
/*Наполнение БД данными*/
INSERT INTO book (title, author, price, amount) 
VALUES 
('Мастер и Маргарита','Булгаков М.А.', 670.99, 3),
('Белая гвардия','Булгаков М.А.', 540.50, 5),
('Идиот','Достоевский Ф.М.',460, 10),
('Братья Карамазовы','Достоевский Ф.М.', 799.01, 3),
('Игрок','Достоевский Ф.М.', 480.50, 10),
('Стихотворения и поэмы','Есенин С.А.', 650.00, 15),
('Таинственный остров', 'Жюль Верн', 169.99, 0),
('Пуаро ведет следствие','Агата Кристи', 272.50, 2),
('Евгений Онегин',  'Пушкин А.С.', 200.11, 8),
('Бородино', 'Лермонтов М.Ю.', 316.55, 10),
('Дубровский', 'Пушкин А.С.', 114.99, 7),
('Собачье сердце', 'Булгаков М.А.', 380.90, 6),
('Вокруг света за 80 дней', 'Жюль Верн', 201.01, 15),
('Смерть на Ниле', 'Агата Кристи', 250.12, 18),
('Убийства по алфавиту', 'Агата Кристи', 231.70, 9),
('Загадочное происшествие', 'Агата Кристи', 260.99, 15),
('Капитанская дочка', 'Пушкин А.С.',  199.99,  5),
('Этюд в багровых тонах', 'Дойл Артур Конан', 215.00, 3),
('Приключения Шерлока Холмса', 'Дойл Артур Конан', 590.50, 11),
('Записки о Шерлоке Холмсе', 'Дойл Артур Конан', 470.20, 14),
('Затерянный мир', 'Дойл Артур Конан', 400.00, 3),
('Стихи',  'Лермонтов М.Ю.', 550.60, 6),
('Поэмы', 'Лермонтов М.Ю.', 202.40, 8),
('Герой нашего времени', 'Лермонтов М.Ю.', 479.99, 2),
('Стихи',  'Пушкин А.С.', 600.50, 5),
('Слово милой', 'Пушкин А.С.', 120.30, 12),
('Поэмы', 'Пушкин А.С.', 630.50, 7),
('Скрюченный домишко', 'Агата Кристи', 150.01, 13);

/*Step_1.1.2 - В конце месяца необходимо выполнить переоценку книг. 
Для тех книг, количество которых больше или равно 10, установить  скидку 15%, округлить получившуюся цену до двух знаков после запятой, для остальных книг скидку не устанавливать (отобразить 0).  
Вывести автора, название книги, количество экземпляров книги, процент скидки (в виде числа) и новую цену книг с учетом скидки. 
Столбцы назвать Автор, Книга, Количество, Скидка, Новая_цена.  
Информацию отсортировать сначала по автору в алфавитном порядке, а затем по названию книги также в алфавитном порядке.*/
/*Мысли в тему 
Интересно, что по сути я не могу использовать 2 раза case подряд. Мне пришлось ставить скидку с помощью IF, а уже потом использовать CASE.
Сейчас дорешаю и проверю в решениях, как люди решают.

Ничего даже читать не стал, просто переписал свой запрос, видимо я некорректно делал как то.*/
/*Вариант 1*/
SELECT author AS Автор, title AS Книга, amount AS Количество, 
	CASE
		WHEN amount >=10 THEN 15
        ELSE 0
	END AS Скидка,
    CASE
		WHEN amount >=10 THEN ROUND(price*0.85, 2)
        ELSE price
	END AS Новая_цена
FROM book
ORDER BY author, title;
/*Вариант 2*/
SELECT author AS Автор, title AS Книга, amount AS Количество, IF (amount >= 10, 15, 0) AS Скидка,
    CASE
		WHEN amount >=10  THEN ROUND(price*0.85, 2)
        ELSE price
	END AS Новая_цена
FROM book
ORDER BY author, title;

/*Step_1.1.3 - Снизить цены книг, которые стоят больше 400 рублей, на 20%. 
Вывести автора, название, цену, количество книг, рассчитанную скидку (столбец sale_20) и цену книги со скидкой (price_sale).  
Результаты округлить до двух знаков после запятой. 
Для тех книг, на которые скидка не действует, в последних двух столбцах вывести символ  "-".  
Отсортировать информацию сначала по фамилии автора, а потом по названию книги.*/

SELECT author, title, price, amount,
	CASE
		WHEN price > 400 THEN ROUND(price*0.2, 2)
        ELSE "-"
	END AS sale_20,
    CASE
		WHEN price > 400 THEN ROUND(price*0.8, 2)
        ELSE "-"
	END AS price_sale
FROM book
ORDER BY author, title;

/*Step_1.1.4 - На распродаже размер скидки устанавливается в зависимости от количества экземпляров книги в магазине и от цены книги:
для книг в остатке не менее 5 штук скидка 50%;
для книг в остатке менее 5 штук скидка устанавливается в зависимости от цены: на книги не дешевле 700 руб скидка 20%, на остальные - 10%.

Вывести автора, название книги, количество, старая цена, скидка, цена со скидкой.  
Два последних столбца назвать Скидка и Цена_со_скидкой.  
Последний столбец округлить до двух знаков после запятой. 
Значение скидки вывести в виде строки текста (например, "15%"). 
Информацию отсортировать сначала по автору в алфавитном порядке, затем по убыванию цены книги со скидкой.*/

SELECT author, title, amount, price, CASE
		WHEN amount >= 5
			THEN "50%"
		ELSE 
			CASE
				WHEN price >= 700 THEN "20%"
				ELSE "10%"
			END
	END AS Скидка,
	CASE
		WHEN amount >= 5
			THEN ROUND(price*0.5, 2)
		ELSE 
			CASE
				WHEN price >= 700 THEN ROUND(price*0.8, 2)
				ELSE ROUND(price*0.9, 2)
			END
	END AS Цена_со_скидкой
FROM book
ORDER BY author, Цена_со_скидкой DESC;

/*Step_1.1.5 - Акция "Купи книгу от 500 руб. и получи подарок".
Вывести автора, название книги и цену. Выбрать книги с ценой 500 рублей и выше, отсортировать информацию в алфавитном порядке сначала по автору, а затем названию книги. 
Добавить столбец Подарок,  в котором вывести, какой подарок получает покупатель: если куплена книга от 500 рублей до 600 рублей (включительно), то подарок - ручка, 
от 600.01 до 700 (включительно) - детская раскраска, выше 700 - гороскоп.*/
/*Решение:
1 - В выборку должны попадать только книги WHERE price > 500,
2 - с помощью CASE разделяем ценовые интервалы данных книг, для определения подарка
3 - сортировка*/

SELECT author, title, price, 
CASE
	WHEN price BETWEEN 500 AND 600
		THEN "ручка"
	ELSE 
		CASE
			WHEN price BETWEEN 600.01 AND 700 THEN "детская раскраска"
			ELSE "гороскоп"
            END
		END AS Подарок
FROM book
WHERE price > 500
ORDER BY author, title;


/*Step_1.1.5 - Вывести автора, название, категорию, стоимость (цена * количество). Последние два столбца назвать price_category и cost. 
Из выборки исключить книги автора Агату Кристи, а также книги, имеющие названия "Поэмы" и "Стихи". 
Отсортировать сначала по убыванию стоимости, а затем по названию в алфавитном порядке.
К информации о книге добавить столбец "категория цены" :
если цена меньше 250 - вывести  "низкая";
если цена в интервале от 250 до 600 включительно - вывести "средняя";
более 600 - вывести "высокая".*/

/*Решение:
1 - сперва понимаю, что от меня хотят, формулировать задания на этом курсе, конечно "умеют" :D 
2 - Для начала отсеку книги не нужного автора и книги, которые называются "Поэмы" и "Стихи", именно называются, а не содержат в себе данные части
3 - Задаю через CASE корректный запрос
4 - Сортировка*/

SELECT author, title, 
CASE
	WHEN price < 250
    THEN "низкая"
    ELSE CASE
			WHEN price BETWEEN 250 AND 600
            THEN "средняя"
            ELSE "высокая"
            END
	END AS price_category, 
amount * price AS cost
FROM book
WHERE author <> 'Агата Кристи' AND title NOT LIKE 'Поэмы' AND title NOT LIKE 'Стихи'
ORDER BY cost DESC, title;

/*Step_1.1.5 - Вывести авторов, названия книг и их цену в двух столбцах - Рубли и Копейки,  для тех книг, количество которых больше 11. 
Информацию отсортировать по сначала по убыванию рублей, затем убыванию копеек. 
Пояснение:
Получить ЧИСЛОВЫЕ значения рублей и копеек, используя функцию округления в меньшую сторону FLOOR().*/

/*Решение:
1 - осознание поставленной задачи
2 - простенький запрос с использованием CASE и методов округления. Правда пока я не совсем понимаю, как получить копейки, без 0.35
3 - с получением копеек, разобрался из цены вычитаем округленную внизу цену. Теперь надо понять, как привести копейки к целому. Неужели надо просто сделать * 100 и повторить FLOOR.
Возможно я усложняю, но я думаю есть некая функция*/

SELECT author, title, FLOOR(price) AS Рубли, FLOOR((price - FLOOR(price))*100) AS Копейки
FROM book
WHERE amount > 11
ORDER BY Рубли DESC, Копейки DESC;

/*Заглянув в раздел с решениями я увидел решение автора, которое совпало с моим*/
SELECT author, 
    title, 
    FLOOR(price) As Рубли, 
    FLOOR((price - FLOOR(price)) * 100) AS Копейки 
FROM book 
WHERE amount > 11
ORDER BY Рубли DESC, Копейки DESC;

/*Так же я увидел решение некоего товарища и вот оно мне показалось более лаконичным, оставлю себе на будущее, вдруг придется округлять рубли и копейки)))*/
/*Функции DIV и MOD, возможно мы будем проходить их в будущем*/

SELECT author, title,
    ROUND(price * 100 DIV 100, 0) AS Рубли,
    ROUND(price * 100 MOD 100, 0) AS Копейки
FROM book
WHERE amount > 11
ORDER BY Рубли DESC, Копейки DESC;

/*Step_1.1.6 - Вывести название книги и ее автора, упорядоченные сначала по возрастанию длины названия книги, затем по фамилии автора в алфавитном порядке. 
Также указать фактическую длину названия книги. Последний столбец назвать Длина.
Теория: 
Для вычисления количества символов в строке используется функция CHAR_LENGTH().
Эту функцию можно использовать для вычисления длин строк в некотором столбце: CHAR_LENGTH(имя_столбца)*/

/*Решение: 
1 - делаю запрос title, author
2 - добавляю столбец с длиной названия книги
3 - сортирую
интересное наблюдение в ходе решения:
функцию CHAR_LENGHT() MySQL не выполняет, а вот char_lenght() пожалуйста*/

SELECT title, author, char_length(title) as Длина
FROM book
ORDER BY Длина, author;

/*Step_1.1.7 - Подготовить информацию для распродажи книг в конце года. 
Для этого вывести книги, которые есть в наличии на складе (количество ее экземпляров больше 0) в количестве меньше 4. Для них уменьшить цену в два раза. 
Отобрать название книги, ее автора, количество и новую цену. 
Первым столбцом для каждой книги вывести слово Распродажа. 
Столбцы назвать Категория, Книга, Автор, Количество,Цена. 
Последний столбец округлить до двух знаков после запятой. 
Информацию отсортировать сначала по убыванию цены, затем по названию книги в алфавитном порядке.*/
/*Решение:
1 - перепишу условие. потому что сложно воспринимать его
Нас интересуют книги, чье количество BETWEEN 0 AND 4. 
Для этих книг мы создаем столбец "Категория" со значением "Распродажа" и выводим его первым
Уменьшаем цену данных книг в 2 раза
Потом занимаемся косметикой, даем названия столбцам(названия и сортировка)*/

SELECT CASE
		WHEN amount BETWEEN 1 AND 4
        THEN "Распродажа"
        END AS Категория,
	title AS Книга, 
    author AS Автор,
    amount AS Количество,
    ROUND(price*0.5, 2) AS Цена
FROM book
WHERE amount BETWEEN 1 AND 4
ORDER BY Цена DESC, Книга;

/*Нашел так же для себя интересные способ добавления столбца с конкретным значением "Распродажа"*/
SELECT 'Распродажа' AS Категория, 
    title AS Книга, author AS Автор, amount AS Количество, 
    ROUND(price/2,2) AS Цена
FROM book
WHERE amount IN (1,2,3)
ORDER BY 5 DESC, 2;


/*Step_1.1.8 - Магазин счёл, что классика уже не пользуется популярностью, поэтому необходимо создать запрос на ВЫБОРКУ данных, в котором:

Сменить всех авторов на "Донцова Дарья".
К названию каждой книги в начале дописать "Евлампия Романова и " ( пробел в конце).
Цену поднять на 42% (округлить её до двух знаков после запятой).
Отсортировать по убыванию цены.
Столбцы назвать author, title, price.
Немного теории
Для соединения значений нескольких столбцов или констант используются функции

 CONCAT(), в скобках, через запятую перечисляются названия столбцов или значения констант:
 CONCAT_WS(), в скобках первым параметром указывается разделитель, который будет разделять соединяемые значения, а затем через запятую перечисляются названия столбцов или значения констант.*/
 
 /*Здесь в общем то все простенько*/
 
 SELECT 'Донцова Дарья' AS author, CONCAT("Евлампия Романова и ", title) AS title, ROUND(price*1.42, 2) AS price
FROM book
ORDER BY price DESC;

/*Step_1.1.9 - Магазин печатает этикетки небольшого размера. 
Длинные названия книг невозможно разместить на них. 
Поэтому было решено "обрезать" названия книг до 15 символов. 
Названия книг, длиной меньше или равных 15 оставить без изменения, а остальные обрезать до 12 символов и добавить многоточие ("...") в конце. Например:

Приключения Шерлока Холмса  преобразовать в Приключения ...
Игрок - оставить без изменения

Вывести автора, сокращенное название книг и их цену.
Столбцы назвать Автор, Книга и Цена. 
Информацию отсортировать сначала по названию книг в алфавитном порядке, затем по фамилии автора также в алфавитном порядке.
 
 Немного теории
"Обрезать" текстовые значения можно с помощью двух функций:

LEFT(строка, длина) - обрезает строку с начала до длины, указанной во втором параметре
RIGHT(строка, длина)  - обрезает строку с конца до длины, указанной во втором параметре*/

/*Решение:
1 - создаем запрос на обрезкой названия до 12 символов если длина названия > 15 символов и добавлением в конце константы в виде "..."
2 - И отбираем только те книги, которые */

SELECT author AS Автор, 
	CASE 
		WHEN CHAR_LENGTH(title) > 15
			THEN CONCAT(LEFT(title, 12), '...')
        ELSE title
        END AS Книга, price AS Цена
FROM book
ORDER BY Книга, Автор;

/*Решение через IF что то попроще*/
SELECT author AS Автор, 
	IF(CHAR_LENGTH(title) > 15, CONCAT(LEFT(title, 12), '...'), title) AS Книга, 
    price AS Цена
FROM book
ORDER BY Книга, Автор;


/*Step_1.1.10 - Магазин печатает этикетки небольшого размера. Длинные названия книг невозможно разместить на них.  
Поэтому было решено "обрезать" названия книг до 15 символов. Названия книг, длиной меньше или равных 15 оставить без изменения, а остальные обрезать до 12 символов и добавить многоточие ("...") в конце. 
Также решили сократить фамилии и инициалы авторов по следующему правилу:
если в таблице указаны инициалы автора, то удалить инициалы, например,   Пушкин А.С. --> Пушкин;
если же фамилия и имена авторов написаны без сокращений, то оставить последнее слово, например,  Дойл Артур Конан --> Конан.
Вывести автора, сокращенное название книг и их цену. Столбцы назвать Автор, Книга и Цена. Информацию отсортировать сначала по названию книг в алфавитном порядке, затем по фамилии автора также в алфавитном порядке.*/

/*Немного теории
1. Функция: 
SUBSTRING_INDEX(строка, разделитель, N)
возвращает подстроку из строки перед появлениям N вхождений разделителя.
Если N положителен, то возвращается все, что находится слева от последнего разделителя (считая слева). 
Если N отрицателен, то возвращается все, что находится справа от последнего разделителя (считая справа).

Например:
SUBSTRING_INDEX("Дойл Артур Конан", " ", 1) - возвращает подстроку перед первым вхождением пробела, то есть Дойл;
SUBSTRING_INDEX("Дойл Артур Конан", " ", -1) - возвращает подстроку  после первого вхождения пробела, но этот пробел ищется с конца, то есть результатом будет Конан.*/

/*Решение через CASE: По сути повторение прошлого задания + фишечки с авторами. Соответственно нам необходимо применить SUBSTRING_INDEX.
Главное правильно сформулировать условие отбора*/
SELECT 
	CASE 
		WHEN author LIKE '%.'
			THEN SUBSTRING_INDEX(author, " ", 1)
        ELSE SUBSTRING_INDEX(author, " ", -1)
        END AS Автор, 
	CASE 
		WHEN CHAR_LENGTH(title) > 15
			THEN CONCAT(LEFT(title, 12), '...')
        ELSE title
        END AS Книга, price AS Цена
FROM book
ORDER BY Книга, Автор;

/*Решение через IF попроще*/
SELECT 
	IF(author LIKE '%.', SUBSTRING_INDEX(author, " ", 1), SUBSTRING_INDEX(author, " ", -1)) AS Автор, 
	IF(CHAR_LENGTH(title) > 15, CONCAT(LEFT(title, 12), '...'), title) AS Книга, 
    price AS Цена
FROM book
ORDER BY Книга, Автор;

